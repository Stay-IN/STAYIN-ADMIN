{"ast":null,"code":"var _jsxFileName = \"/home/anshu/Documents/STAYIN/Stayin/portal/src/Pages/Signup/layout.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport style from './style';\nimport { Header } from 'Components';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Snackbar } from 'Components';\nimport { withStyles, Container, Typography, Box, Grid, TextField, CssBaseline, Button, Avatar, CircularProgress } from '@material-ui/core';\nimport { AuthServices } from 'Services';\n\nclass Layout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstname: '',\n      lastname: '',\n      username: '',\n      password: '',\n      isOpen: false,\n      message: '',\n      variant: 'error',\n      isChecking: false\n    };\n\n    this.onClickSignup = async () => {\n      this.setState({\n        isChecking: true\n      });\n      const _this$state = this.state,\n            firstname = _this$state.firstname,\n            lastname = _this$state.lastname,\n            username = _this$state.username,\n            password = _this$state.password;\n      const response = await AuthServices.signup(firstname, lastname, username, password);\n\n      if (!response.success) {\n        const data = response.data.message;\n        this.setState({\n          message: data[0],\n          isOpen: true,\n          variant: 'error'\n        });\n      } else {\n        this.setState({\n          isOpen: true,\n          message: 'Successfully sign up',\n          variant: 'success'\n        });\n      }\n\n      this.setState({\n        username: '',\n        password: '',\n        firstname: '',\n        lastname: '',\n        isChecking: false\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state2 = this.state,\n          firstname = _this$state2.firstname,\n          lastname = _this$state2.lastname,\n          username = _this$state2.username,\n          password = _this$state2.password;\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Snackbar, {\n      errorMessage: this.state.message,\n      isOpen: this.state.isOpen,\n      handleClose: () => this.setState({\n        isOpen: false\n      }),\n      variant: this.state.variant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: classes.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(LockOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Sign up\"), React.createElement(\"form\", {\n      className: classes.form,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      autoComplete: \"fname\",\n      name: \"firstName\",\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      placeholder: \"Enter firstname\",\n      id: \"firstName\",\n      autoFocus: true,\n      value: firstname,\n      onChange: e => this.setState({\n        firstname: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"lastName\",\n      placeholder: \"Enter lastname\",\n      name: \"lastName\",\n      autoComplete: \"lname\",\n      value: lastname,\n      onChange: e => this.setState({\n        lastname: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      placeholder: \"Email\",\n      name: \"email\" // autoComplete='email'\n      ,\n      value: username,\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      placeholder: \"password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      value: password,\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      onClick: this.onClickSignup,\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      disabled: this.state.isChecking ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, this.state.isChecking && React.createElement(CircularProgress, {\n      size: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), \"Signup\"), React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/login\",\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Already have an account? Sign in\"))))), React.createElement(Box, {\n      mt: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withStyles(style)(Layout);","map":{"version":3,"sources":["/home/anshu/Documents/STAYIN/Stayin/portal/src/Pages/Signup/layout.js"],"names":["React","Component","Link","style","Header","LockOutlinedIcon","Snackbar","withStyles","Container","Typography","Box","Grid","TextField","CssBaseline","Button","Avatar","CircularProgress","AuthServices","Layout","state","firstname","lastname","username","password","isOpen","message","variant","isChecking","onClickSignup","setState","response","signup","success","data","render","classes","props","container","paper","avatar","form","e","target","value","submit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SACEC,UADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,GAJF,EAKEC,IALF,EAMEC,SANF,EAOEC,WAPF,EAQEC,MARF,EASEC,MATF,EAUEC,gBAVF,QAWO,mBAXP;AAYA,SAASC,YAAT,QAA6B,UAA7B;;AAEA,MAAMC,MAAN,SAAqBjB,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BkB,KAD6B,GACrB;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,QAAQ,EAAE,EAJJ;AAKNC,MAAAA,MAAM,EAAE,KALF;AAMNC,MAAAA,OAAO,EAAE,EANH;AAONC,MAAAA,OAAO,EAAE,OAPH;AAQNC,MAAAA,UAAU,EAAE;AARN,KADqB;;AAAA,SAW7BC,aAX6B,GAWb,YAAY;AAC1B,WAAKC,QAAL,CAAc;AAAEF,QAAAA,UAAU,EAAE;AAAd,OAAd;AAD0B,0BAE0B,KAAKR,KAF/B;AAAA,YAElBC,SAFkB,eAElBA,SAFkB;AAAA,YAEPC,QAFO,eAEPA,QAFO;AAAA,YAEGC,QAFH,eAEGA,QAFH;AAAA,YAEaC,QAFb,eAEaA,QAFb;AAG1B,YAAMO,QAAQ,GAAG,MAAMb,YAAY,CAACc,MAAb,CACrBX,SADqB,EAErBC,QAFqB,EAGrBC,QAHqB,EAIrBC,QAJqB,CAAvB;;AAMA,UAAI,CAACO,QAAQ,CAACE,OAAd,EAAuB;AACrB,cAAMC,IAAI,GAAGH,QAAQ,CAACG,IAAT,CAAcR,OAA3B;AACA,aAAKI,QAAL,CAAc;AACZJ,UAAAA,OAAO,EAAEQ,IAAI,CAAC,CAAD,CADD;AAEZT,UAAAA,MAAM,EAAE,IAFI;AAGZE,UAAAA,OAAO,EAAE;AAHG,SAAd;AAKD,OAPD,MAOO;AACL,aAAKG,QAAL,CAAc;AACZL,UAAAA,MAAM,EAAE,IADI;AAEZC,UAAAA,OAAO,EAAE,sBAFG;AAGZC,UAAAA,OAAO,EAAE;AAHG,SAAd;AAKD;;AACD,WAAKG,QAAL,CAAc;AACZP,QAAAA,QAAQ,EAAE,EADE;AAEZC,QAAAA,QAAQ,EAAE,EAFE;AAGZH,QAAAA,SAAS,EAAE,EAHC;AAIZC,QAAAA,QAAQ,EAAE,EAJE;AAKZM,QAAAA,UAAU,EAAE;AALA,OAAd;AAOD,KAzC4B;AAAA;;AA2C7BO,EAAAA,MAAM,GAAG;AAAA,UACCC,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAAA,yBAE6C,KAAKhB,KAFlD;AAAA,UAECC,SAFD,gBAECA,SAFD;AAAA,UAEYC,QAFZ,gBAEYA,QAFZ;AAAA,UAEsBC,QAFtB,gBAEsBA,QAFtB;AAAA,UAEgCC,QAFhC,gBAEgCA,QAFhC;AAGP,WACE;AAAK,MAAA,SAAS,EAAEY,OAAO,CAACE,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,QAAD;AACE,MAAA,YAAY,EAAE,KAAKlB,KAAL,CAAWM,OAD3B;AAEE,MAAA,MAAM,EAAE,KAAKN,KAAL,CAAWK,MAFrB;AAGE,MAAA,WAAW,EAAE,MAAM,KAAKK,QAAL,CAAc;AAAEL,QAAAA,MAAM,EAAE;AAAV,OAAd,CAHrB;AAIE,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWO,OAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAQE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAA4B,MAAA,QAAQ,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAES,OAAO,CAACG,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAEH,OAAO,CAACI,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,IAAtB;AAA2B,MAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,EAOE;AAAM,MAAA,SAAS,EAAEJ,OAAO,CAACK,IAAzB;AAA+B,MAAA,UAAU,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,YAAY,EAAC,OADf;AAEE,MAAA,IAAI,EAAC,WAFP;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,SAAS,MALX;AAME,MAAA,WAAW,EAAC,iBANd;AAOE,MAAA,EAAE,EAAC,WAPL;AAQE,MAAA,SAAS,MARX;AASE,MAAA,KAAK,EAAEpB,SATT;AAUE,MAAA,QAAQ,EAAEqB,CAAC,IAAI,KAAKZ,QAAL,CAAc;AAAET,QAAAA,SAAS,EAAEqB,CAAC,CAACC,MAAF,CAASC;AAAtB,OAAd,CAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAeE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,EAAE,EAAC,UAJL;AAKE,MAAA,WAAW,EAAC,gBALd;AAME,MAAA,IAAI,EAAC,UANP;AAOE,MAAA,YAAY,EAAC,OAPf;AAQE,MAAA,KAAK,EAAEtB,QART;AASE,MAAA,QAAQ,EAAEoB,CAAC,IAAI,KAAKZ,QAAL,CAAc;AAAER,QAAAA,QAAQ,EAAEoB,CAAC,CAACC,MAAF,CAASC;AAArB,OAAd,CATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAfF,EA4BE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,EAAE,EAAC,OAJL;AAKE,MAAA,WAAW,EAAC,OALd;AAME,MAAA,IAAI,EAAC,OANP,CAOE;AAPF;AAQE,MAAA,KAAK,EAAErB,QART;AASE,MAAA,QAAQ,EAAEmB,CAAC,IAAI,KAAKZ,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAAEmB,CAAC,CAACC,MAAF,CAASC;AAArB,OAAd,CATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA5BF,EAyCE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,WAAW,EAAC,UALd;AAME,MAAA,IAAI,EAAC,UANP;AAOE,MAAA,EAAE,EAAC,UAPL;AAQE,MAAA,YAAY,EAAC,kBARf;AASE,MAAA,KAAK,EAAEpB,QATT;AAUE,MAAA,QAAQ,EAAEkB,CAAC,IAAI,KAAKZ,QAAL,CAAc;AAAEN,QAAAA,QAAQ,EAAEkB,CAAC,CAACC,MAAF,CAASC;AAArB,OAAd,CAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAzCF,CADF,EA0DE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE,KAAKf,aADhB;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,OAAO,EAAC,WAHV;AAIE,MAAA,KAAK,EAAC,SAJR;AAKE,MAAA,SAAS,EAAEO,OAAO,CAACS,MALrB;AAME,MAAA,QAAQ,EAAE,KAAKzB,KAAL,CAAWQ,UAAX,GAAwB,IAAxB,GAA+B,KAN3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQG,KAAKR,KAAL,CAAWQ,UAAX,IAAyB,oBAAC,gBAAD;AAAkB,MAAA,IAAI,EAAE,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAR5B,WA1DF,EAoEE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAkB,MAAA,OAAO,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,CADF,CApEF,CAPF,CAFF,EAsFE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtFF,CARF,CADF;AAmGD;;AAjJ4B;;AAoJ/B,eAAepB,UAAU,CAACJ,KAAD,CAAV,CAAkBe,MAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport style from './style';\nimport { Header } from 'Components';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Snackbar } from 'Components';\nimport {\n  withStyles,\n  Container,\n  Typography,\n  Box,\n  Grid,\n  TextField,\n  CssBaseline,\n  Button,\n  Avatar,\n  CircularProgress\n} from '@material-ui/core';\nimport { AuthServices } from 'Services';\n\nclass Layout extends Component {\n  state = {\n    firstname: '',\n    lastname: '',\n    username: '',\n    password: '',\n    isOpen: false,\n    message: '',\n    variant: 'error',\n    isChecking: false\n  };\n  onClickSignup = async () => {\n    this.setState({ isChecking: true });\n    const { firstname, lastname, username, password } = this.state;\n    const response = await AuthServices.signup(\n      firstname,\n      lastname,\n      username,\n      password\n    );\n    if (!response.success) {\n      const data = response.data.message;\n      this.setState({\n        message: data[0],\n        isOpen: true,\n        variant: 'error'\n      });\n    } else {\n      this.setState({\n        isOpen: true,\n        message: 'Successfully sign up',\n        variant: 'success'\n      });\n    }\n    this.setState({\n      username: '',\n      password: '',\n      firstname: '',\n      lastname: '',\n      isChecking: false\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { firstname, lastname, username, password } = this.state;\n    return (\n      <div className={classes.container}>\n        <Header />\n        <Snackbar\n          errorMessage={this.state.message}\n          isOpen={this.state.isOpen}\n          handleClose={() => this.setState({ isOpen: false })}\n          variant={this.state.variant}\n        />\n        <Container component='main' maxWidth='xs'>\n          <CssBaseline />\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component='h1' variant='h5'>\n              Sign up\n            </Typography>\n            <form className={classes.form} noValidate>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    autoComplete='fname'\n                    name='firstName'\n                    variant='outlined'\n                    required\n                    fullWidth\n                    placeholder='Enter firstname'\n                    id='firstName'\n                    autoFocus\n                    value={firstname}\n                    onChange={e => this.setState({ firstname: e.target.value })}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    variant='outlined'\n                    required\n                    fullWidth\n                    id='lastName'\n                    placeholder='Enter lastname'\n                    name='lastName'\n                    autoComplete='lname'\n                    value={lastname}\n                    onChange={e => this.setState({ lastname: e.target.value })}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant='outlined'\n                    required\n                    fullWidth\n                    id='email'\n                    placeholder='Email'\n                    name='email'\n                    // autoComplete='email'\n                    value={username}\n                    onChange={e => this.setState({ username: e.target.value })}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant='outlined'\n                    required\n                    fullWidth\n                    name='password'\n                    placeholder='password'\n                    type='password'\n                    id='password'\n                    autoComplete='current-password'\n                    value={password}\n                    onChange={e => this.setState({ password: e.target.value })}\n                  />\n                </Grid>\n              </Grid>\n\n              <Button\n                onClick={this.onClickSignup}\n                fullWidth\n                variant='contained'\n                color='primary'\n                className={classes.submit}\n                disabled={this.state.isChecking ? true : false}\n              >\n                {this.state.isChecking && <CircularProgress size={20} />}Signup\n              </Button>\n              <Grid container justify='flex-end'>\n                <Grid item>\n                  <Link to='/login' variant='body2'>\n                    Already have an account? Sign in\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n          <Box mt={5}></Box>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(style)(Layout);\n"]},"metadata":{},"sourceType":"module"}