{"ast":null,"code":"var _jsxFileName = \"/home/anshu/Documents/STAYIN/Stayin/portal/src/Pages/Login/layout.js\";\nimport React, { Component } from 'react';\nimport { Snackbar } from 'Components';\nimport { AuthServices } from 'Services';\nimport { LockOutlinedIcon, AccountCircle } from '@material-ui/icons';\nimport { withStyles, Typography, TextField, Button, Box, Container, CssBaseline, Grid, Avatar, CircularProgress } from '@material-ui/core';\nimport style from './style';\nimport { Header } from 'Components';\nimport { Link } from 'react-router-dom';\n\nclass Layout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: '',\n      isOpen: false,\n      message: '',\n      variant: 'error',\n      isChecking: false\n    };\n\n    this.onClickLogin = async () => {\n      this.setState({\n        isChecking: true\n      });\n      const _this$state = this.state,\n            username = _this$state.username,\n            password = _this$state.password;\n      const response = await AuthServices.login(username, password);\n\n      if (!response.success) {\n        const message = response.data.message;\n        console.log(message); // for (const m of message) {\n        //   alert(m);\n        // }\n\n        this.setState({\n          message: message[0],\n          isOpen: true,\n          variant: 'error'\n        });\n      } else {\n        this.setState({\n          isOpen: true,\n          message: 'Successfully login',\n          variant: 'success'\n        });\n        this.props.history.push('/home');\n      }\n\n      this.setState({\n        firstname: '',\n        lastname: '',\n        isChecking: false\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state2 = this.state,\n          username = _this$state2.username,\n          password = _this$state2.password;\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Snackbar, {\n      errorMessage: this.state.message,\n      isOpen: this.state.isOpen,\n      handleClose: () => this.setState({\n        isOpen: false\n      }),\n      variant: this.state.variant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: classes.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(LockOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(\"form\", {\n      className: classes.form,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      AccountCircle: true,\n      autoFocus: true,\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      placeholder: \"Email\",\n      name: \"email\" // autoComplete='email'\n      ,\n      value: username,\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      placeholder: \"password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      value: password,\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      onClick: this.onClickLogin,\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      disabled: this.state.isChecking ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.isChecking && React.createElement(CircularProgress, {\n      size: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), \"Login\"), React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/signup\",\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Create new account? Sign up\"))))), React.createElement(Box, {\n      mt: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withStyles(style)(Layout);","map":{"version":3,"sources":["/home/anshu/Documents/STAYIN/Stayin/portal/src/Pages/Login/layout.js"],"names":["React","Component","Snackbar","AuthServices","LockOutlinedIcon","AccountCircle","withStyles","Typography","TextField","Button","Box","Container","CssBaseline","Grid","Avatar","CircularProgress","style","Header","Link","Layout","state","username","password","isOpen","message","variant","isChecking","onClickLogin","setState","response","login","success","data","console","log","props","history","push","firstname","lastname","render","classes","container","paper","avatar","form","e","target","value","submit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Snackbar } from 'Components';\nimport { AuthServices } from 'Services';\nimport { LockOutlinedIcon, AccountCircle } from '@material-ui/icons';\n\nimport {\n  withStyles,\n  Typography,\n  TextField,\n  Button,\n  Box,\n  Container,\n  CssBaseline,\n  Grid,\n  Avatar,\n  CircularProgress\n} from '@material-ui/core';\nimport style from './style';\nimport { Header } from 'Components';\nimport { Link } from 'react-router-dom';\n\nclass Layout extends Component {\n  state = {\n    username: '',\n    password: '',\n    isOpen: false,\n    message: '',\n    variant: 'error',\n    isChecking: false\n  };\n  onClickLogin = async () => {\n    this.setState({ isChecking: true });\n    const { username, password } = this.state;\n    const response = await AuthServices.login(username, password);\n    if (!response.success) {\n      const message = response.data.message;\n      console.log(message);\n      // for (const m of message) {\n      //   alert(m);\n      // }\n      this.setState({\n        message: message[0],\n        isOpen: true,\n        variant: 'error'\n      });\n    } else {\n      this.setState({\n        isOpen: true,\n        message: 'Successfully login',\n        variant: 'success'\n      });\n      this.props.history.push('/home');\n    }\n    this.setState({\n      firstname: '',\n      lastname: '',\n      isChecking: false\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { username, password } = this.state;\n    return (\n      <div className={classes.container}>\n        <Header />\n        <Snackbar\n          errorMessage={this.state.message}\n          isOpen={this.state.isOpen}\n          handleClose={() => this.setState({ isOpen: false })}\n          variant={this.state.variant}\n        />\n        <Container component='main' maxWidth='xs'>\n          <CssBaseline />\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component='h1' variant='h5'>\n              Sign in\n            </Typography>\n            <form className={classes.form} noValidate>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    AccountCircle\n                    autoFocus\n                    variant='outlined'\n                    required\n                    fullWidth\n                    id='email'\n                    placeholder='Email'\n                    name='email'\n                    // autoComplete='email'\n                    value={username}\n                    onChange={e => this.setState({ username: e.target.value })}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant='outlined'\n                    required\n                    fullWidth\n                    name='password'\n                    placeholder='password'\n                    type='password'\n                    id='password'\n                    autoComplete='current-password'\n                    value={password}\n                    onChange={e => this.setState({ password: e.target.value })}\n                  />\n                </Grid>\n              </Grid>\n\n              <Button\n                onClick={this.onClickLogin}\n                fullWidth\n                variant='contained'\n                color='primary'\n                className={classes.submit}\n                disabled={this.state.isChecking ? true : false}\n              >\n                {this.state.isChecking && <CircularProgress size={20} />}Login\n              </Button>\n              <Grid container justify='flex-end'>\n                <Grid item>\n                  <Link to='/signup' variant='body2'>\n                    Create new account? Sign up\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n          <Box mt={5}></Box>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(style)(Layout);\n"]},"metadata":{},"sourceType":"module"}