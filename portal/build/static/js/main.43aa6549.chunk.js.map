{"version":3,"sources":["Pages/Home/style.js","Components/Header/style.js","Components/Header/layout.js","Components/Header/index.js","Pages/Home/layout.js","Pages/Home/index.js","Pages/Login/style.js","Pages/Login/layout.js","Pages/Login/index.js","Pages/index.js","App.js","serviceWorker.js","index.js"],"names":["style","theme","container","display","alignItems","flex","flexDirection","navigationBar","backgroundColor","palette","primary","main","Layout","this","props","classes","title","AppBar","position","Toolbar","className","Typography","variant","Component","withStyles","Header","Root","exact","path","component","Home","Login","React","createMuiTheme","blue","secondary","pink","typography","fontFamily","join","App","ThemeProvider","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"wRASeA,EATD,SAAAC,GAAK,MAAK,CACtBC,UAAW,CACTC,QAAS,OACTC,WAAY,SACZC,KAAM,EACNC,cAAe,Y,gBCAJN,EALD,SAAAC,GAAK,MAAK,CACtBM,cAAe,CACbC,gBAAiBP,EAAMQ,QAAQC,QAAQC,QCGrCC,E,iLACM,IAAD,EACoBC,KAAKC,MAAxBC,EADD,EACCA,QAASC,EADV,EACUA,MACjB,OACE,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,CAASC,UAAWL,EAAQR,eAC1B,kBAACc,EAAA,EAAD,CAAYC,QAAQ,MAAMN,GAAS,kB,GANxBO,aCJNX,EDiBAY,YAAWxB,EAAXwB,CAAkBZ,GEZ3BA,E,iLACM,IACAG,EAAYF,KAAKC,MAAjBC,QACR,OACE,yBAAKK,UAAWL,EAAQb,WACtB,kBAACuB,EAAD,MACA,kBAACJ,EAAA,EAAD,CAAYC,QAAQ,SAApB,oB,GANaC,aCLNX,EDiBAY,YAAWxB,EAAXwB,CAAkBZ,GEhBlBZ,EAFD,SAAAC,GAAK,MAAK,ICIlBW,E,iLACM,IACAG,EAAYF,KAAKC,MAAjBC,QACR,OACE,yBAAKK,UAAWL,EAAQb,WACtB,kBAACmB,EAAA,EAAD,CAAYC,QAAQ,MAApB,qB,GALaC,aCHNX,EDcAY,YAAWxB,EAAXwB,CAAkBZ,GEGlBc,E,iLAVX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASC,UAAWE,U,GAN7BC,IAAMT,W,kDCGnBtB,EAAQgC,YAAe,CAC3BxB,QAAS,CACPC,QAASwB,IACTC,UAAWC,KAEbC,WAAY,CACVC,WAAY,CACV,cACA,SACA,gBACA,qBACA,aACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAC,KAAK,QAcIC,E,iLARX,OACE,kBAACC,EAAA,EAAD,CAAexC,MAAOA,GACpB,kBAAC,EAAD,W,GAJU+B,IAAMT,WCnBlBmB,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MC1FjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDgB1C,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,GAAwB7B,OAAOC,SAAS6B,MACpDC,SAAW/B,OAAOC,SAAS8B,OAIvC,OAGF/B,OAAOgC,iBAAiB,QAAQ,WAC9B,IAAM3B,EAAK,UAAMwB,GAAN,sBAEP/B,IAgEV,SAAiCO,EAAOC,GAEtC2B,MAAM5B,GACHK,MAAK,SAAAwB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5ChC,UAAUC,cAAcgC,MAAM9B,MAAK,SAAAC,GACjCA,EAAa8B,aAAa/B,MAAK,WAC7BV,OAAOC,SAASyC,eAKpBtC,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEArFAwB,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAM9B,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OC3C/BE,K","file":"static/js/main.43aa6549.chunk.js","sourcesContent":["const style = theme => ({\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n    flex: 1,\n    flexDirection: 'column'\n  }\n});\n\nexport default style;\n","const style = theme => ({\n  navigationBar: {\n    backgroundColor: theme.palette.primary.main\n  }\n});\nexport default style;\n","import React, { Component } from 'react';\nimport { Typography, AppBar, Toolbar, withStyles } from '@material-ui/core';\n\nimport style from './style';\n\nclass Layout extends Component {\n  render() {\n    const { classes, title } = this.props;\n    return (\n      <AppBar position='static'>\n        <Toolbar className={classes.navigationBar}>\n          <Typography variant='h6'>{title || 'MERN APP'}</Typography>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default withStyles(style)(Layout);\n","import Layout from './layout';\nexport default Layout;\n","import React, { Component } from 'react';\nimport { withStyles, Typography } from '@material-ui/core';\n\nimport style from './style';\nimport { Header } from 'Components';\n\nclass Layout extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.container}>\n        <Header />\n        <Typography variant='body1'>Home Screen</Typography>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(style)(Layout);\n","import Layout from './layout';\nexport default Layout;\n","const style = theme => ({});\n\nexport default style;\n","import React, { Component } from 'react';\nimport { withStyles, Typography} from '@material-ui/core';\nimport style from './style';\n\nclass Layout extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.container}>\n        <Typography variant='h5'>Login Screen</Typography>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(style)(Layout);\n","import Layout from './layout';\nexport default Layout;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Home from 'Pages/Home';\nimport Login from 'Pages/Login';\n\nclass Root extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/login' component={Login} />\n        </Switch>\n      </Router>\n    );\n  }\n}\nexport default Root;\n","import React from 'react';\nimport Root from 'Pages/index';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport blue from '@material-ui/core/colors/blue';\nimport pink from '@material-ui/core/colors/pink';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: pink\n  },\n  typography: {\n    fontFamily: [\n      'Google Sans',\n      'Roboto',\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(',')\n  }\n});\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Root />\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.register();\n"],"sourceRoot":""}